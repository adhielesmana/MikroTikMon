# ===========================================
# MikroTik Monitor - Environment Configuration
# ===========================================
# Copy this file to .env and fill in your values
# DO NOT commit .env to version control!

# ---------------------------
# Database Configuration
# ---------------------------
PGDATABASE=mikrotik_monitor
PGUSER=mikrotik_user
PGPASSWORD=your_secure_database_password_here
PGHOST=postgres
PGPORT=5432

# Full database connection URL (auto-generated in Docker)
DATABASE_URL=postgresql://mikrotik_user:your_secure_database_password_here@postgres:5432/mikrotik_monitor

# ---------------------------
# Application Configuration
# ---------------------------
NODE_ENV=production
APP_PORT=5000

# Session secret (REQUIRED - generate with: openssl rand -base64 32)
SESSION_SECRET=your_random_secret_key_minimum_32_characters_long

# ---------------------------
# Email Configuration (Optional)
# ---------------------------
# For alert notifications via email
# If using Gmail, create an App Password: https://myaccount.google.com/apppasswords

SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password-here
SMTP_FROM_EMAIL=your-email@gmail.com

# ---------------------------
# Authentication
# ---------------------------

# Replit Auth (Optional - for Replit-hosted deployments)
REPL_ID=your-repl-id-here
ISSUER_URL=https://replit.com/oidc
REPLIT_DOMAINS=yourdomain.com

# Google OAuth (Recommended for self-hosted)
# Get credentials from: https://console.cloud.google.com/apis/credentials
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret
APP_URL=http://localhost:5000
# GOOGLE_CALLBACK_URL is auto-generated as: {APP_URL}/api/auth/google/callback

# Super Admin Account (Required for self-hosted)
# This is a static admin account with full access
SUPER_ADMIN_USERNAME=admin
SUPER_ADMIN_PASSWORD=$2b$10$YourBcryptHashedPasswordHere
# Generate password hash with: node scripts/hash-password.js yourpassword

# ---------------------------
# PostgreSQL External Port
# ---------------------------
# Port to expose PostgreSQL on host (optional, for debugging only)
# By default, the database is NOT exposed externally (better security)
# To enable external access:
#   1. Uncomment the 'ports' section in docker-compose.yml
#   2. Set POSTGRES_PORT=5433 (or another port) to avoid conflicts
# POSTGRES_PORT=5433

# ---------------------------
# Generate Secure Values
# ---------------------------
# Use these commands to generate secure values:
#
# SESSION_SECRET:
#   openssl rand -base64 32
#
# PGPASSWORD:
#   openssl rand -base64 24
